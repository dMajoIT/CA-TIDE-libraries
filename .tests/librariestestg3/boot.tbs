include "global.tbh"



sub boot()
    
    'LCD setup
    '================================================================
    lcd.width=320
    lcd.height=240
    io.num=PL_IO_NUM_55
    io.enabled=YES
    io.num=PL_IO_NUM_43
    io.enabled=YES
    io.num=PL_IO_NUM_42
    io.enabled=YES
    io.num=PL_IO_NUM_41
    io.enabled=YES
    io.num=PL_IO_NUM_40
    io.enabled=YES
    lcd.iomapping="55,43,42,41,40,0" 'RST,DC,WR,RD,CS,data_bus
    lcd.rotated=YES 'yes, the LCD is installed up side down
    lcd.enabled=YES
    'backlight ON
    io.num=PL_IO_NUM_54 
    io.enabled=YES
    io.state=LOW
    
    'clear screen to white
    lcd.forecolor=&h0
    lcd.lock
    lcd.fill(0,0,lcd.width,lcd.height)
    lcd.unlock
    'sets font used to draw text
    romfile.open(LOG_FONT_FILE)
    lcd.setfont(romfile.offset)
    
    'To print text:
    'lcd.backcolor=&h0
    'lcd.forecolor=&hffff
    'lcd.print("Hello World", 0, 0)
    '-----------------------------------------------------------------

    'Setting Library Initialization
    '================================================================
    dim stg_init_code as en_stg_status_codes
    dim stg_name as string(STG_MAX_SETTING_NAME_LEN)
    if stg_start()<>EN_STG_STATUS_OK then 
        pat.play("R-R-~",PL_PAT_CANINT)
        sys.debugprint("stg_start failed")
        sys.halt
    end if
    stg_init_code=stg_check_all(stg_name)
    select case stg_init_code
    case EN_STG_STATUS_OK:
    '--- all good ---
    case EN_STG_STATUS_INVALID, EN_STG_STATUS_FAILURE:
        if stg_restore_multiple(EN_STG_INIT_MODE_NORMAL)<>EN_STG_STATUS_OK then 
            pat.play("R-R-~",PL_PAT_CANINT)
            sys.debugprint("stg_restore_multiple failed")
            sys.halt
        end if
    case else:
        'some other trouble
        pat.play("R-R-~",PL_PAT_CANINT)
        sys.debugprint("stg_check_all failed")
        sys.halt
    end select
    '-----------------------------------------------------------------
WIFAP=stg_get("WIFAP",0)
WSEC=stg_get("WSEC",0)
WIFPW=stg_get("WIFPW",0)
MQTTI=stg_get("MQTTI",0)
MQTTU=stg_get("MQTTU",0)
MQTTP=stg_get("MQTTP",0)
MQTTH=stg_get("MQTTH",0)

    'Wireless Module Setup
    '================================================================
    wln.csmap=WLN_CS
    io.num=WLN_CS
    io.enabled=YES
    wln.dimap=WLN_DI
    wln.domap=WLN_DO
    io.num=WLN_DO
    io.enabled=YES
    wln.clkmap=WLN_CLK
    io.num=WLN_CLK
    io.enabled=YES
    io.num=WLN_RST
    io.enabled=YES
    io.num=WLN_RST
    io.state=LOW
    dim wln_delay as dword = sys.timercountms + 2
    while sys.timercountms < wln_delay
    wend
    io.state=HIGH
    wln.getmoduletype()
    wln.buffrq(5)
    sys.buffalloc()
    if wln.boot(0)<>OK then
        sys.debugprint("wireless module boot failed")
    end if
    sys.debugprint("Wireless F/W version:"+wln.fwversion)
    '-----------------------------------------------------------------

    device_net_ip = "192.168.1.130"
    device_net_mask = "255.255.255.0"
    device_net_gateway = "192.168.1.1"
    'Ethernet setup
    '================================================================

    dim dhcp_enabled as string(1) = 1
    dim use_dhcp as boolean 

    if dhcp_enabled = "1" then
        use_dhcp = true
    else
        use_dhcp = false
    end if

    if use_dhcp = false then
        net.ip=device_net_ip
        net.netmask=device_net_mask
        net.gatewayip=device_net_gateway
    else
        'ethernet dhcp
        dhcp_start(PL_SOCK_INTERFACE_NET,device_net_ip,"")
    end if
    '-----------------------------------------------------------------
current_interface = PL_SOCK_INTERFACE_NULL
    sys.onsystimerperiod=1
    dim f as byte
    for f=0 to MAX_NUM_INTERFACES-1
        interface_ready(f)=NO
    next f

    'enable the control lines (notice that the use of the RST line is not really necessary)   
    io.num=PL_IO_NUM_46
    io.enabled=YES
    io.state=LOW
    io.state=HIGH
    io.num=PL_IO_NUM_47
    io.enabled=YES
    io.num=PL_IO_NUM_48
    io.enabled=YES

    
    'make 5 clocks
    io.num=PL_IO_NUM_47
    for f=0 to 4
        io.lineset(PL_IO_NUM_48,1)
        io.state=LOW
        io.state=HIGH
    next f
    
    

    beep.divider = 11111

    'Wifi setup
    '================================================================
    wln_ssid=WIFAP
    wln_password=WIFPW
    wln_security=WSEC
    wln_dhcp_enabled=1
#if SIGNAL_STRENGTH_INDICATION
    signal_strength_set(0) 'this will turn all 5 LEDs OFF
#endif
    'wifi DHCP
    dim wln_dhcp_enabled as string(1) = 1
    dim wln_use_dhcp as boolean 

    if wln_dhcp_enabled = "1" then
        wln_use_dhcp = true
    else
        wln_use_dhcp = false
    end if     
    
    if wln_use_dhcp = true then
    dhcp_start(PL_SOCK_INTERFACE_WLN,"1.0.0.1","")
    end if
    '-----------------------------------------------------------------
    wln_error=NO
    wln_already_started=YES
    num_wln_failures=0
    

    'DNS setup
    '================================================================
    DNS_socket=sock_get("DNS")
    dns_start(DNS_socket)
    'Making a DNS query:
    'dns_connect(PL_SOCK_INTERFACE_NET, "8.8.4.4",0)
    'dns_query("google.com")
    'get the response in callback_dns_answer_acquired
    '-----------------------------------------------------------------

    'Modbus Setup
    '==================================
    modbus_initialize()
    

    'temp_raw
    'modbus_master_request(1, ReadHoldingRegisters, 300, 1, "", MODBUS_MASTER_INTERFACE, modbus_RTU)
    MODBUS_MASTER_INTERFACE=sock_get("MBM")

    modbus_slave_interface=sock_get("MBS")
    sock.num=modbus_slave_interface
    sock.protocol=PL_SOCK_PROTOCOL_TCP
    sock.localportlist="502"
    sock.inconmode=PL_SOCK_INCONMODE_ANY_IP_ANY_PORT
    sock.reconmode=PL_SOCK_RECONMODE_3
    sock.allowedinterfaces="NET,WLN,PPP"
    sock.txbuffrq(1)
    sock.rxbuffrq(1)
    sys.buffalloc()
    
    '----------------------------------

    'HTTP server setup
    '================================================================
    dim http_server_count as byte
    for http_server_count=0 to 3 'allocate sockets for the webserver
        sock.num=sock_get("W" + str(http_server_count))
        sock.connectiontout=120
        sock.txbuffrq(10)
        sock.varbuffrq(1)
        sys.buffalloc()
        sock.redir(PL_REDIR_SOCK0 + sock.num)
        
        sock.protocol=PL_SOCK_PROTOCOL_TCP
        sock.httpportlist="80"
        sock.allowedinterfaces="NET,WLN"
        sock.inconmode=PL_SOCK_INCONMODE_ANY_IP_ANY_PORT
    next http_server_count
    'visit the device ip on a browser to see index.html being served
    '-----------------------------------------------------------------

http_server_password = ""

    'Fd(flash disk) setup
    '================================================================
    if fd.mount<>PL_FD_STATUS_OK then
        if fd.formatj(fd.availableflashspace/2,32,100)<>PL_FD_STATUS_OK then
            sys.debugprint("fd.formatj failed")
            sys.halt
        end if
    
        if fd.mount<>PL_FD_STATUS_OK then
            sys.debugprint("fd.mount failed")
            sys.halt
        end if
    end if
    '-----------------------------------------------------------------

    http_start()

    'SNTP setup
    '================================================================
    SNTP_socket=sock_get("NTP")
    sntp_init()
    '-----------------------------------------------------------------
	var_poll_timer = 1000

    'Tables setup
    '================================================================
    if tbl_start()<>EN_TBL_STATUS_OK then
        sys.debugprint("TBL> Failed to start")
        sys.halt
    end if
    '-----------------------------------------------------------------

    tbl_web_start()
    dim schema_changed as boolean = false
    tbl_web_set("T1",true)



    if tbl_schema_check(TBL_DESCRIPTOR_FILE)<>EN_TBL_STATUS_OK then
        schema_changed = YES
    end if

    if schema_changed= YES then
        sys.debugprint("TBL> Schema changed, formatting flash")
        if fd.formatj(fd.availableflashspace/2,32,100)<>PL_FD_STATUS_OK then
            sys.debugprint("TBL> Failed to format flash")
            sys.halt
        end if
        if tbl_start()<>EN_TBL_STATUS_OK then
            sys.debugprint("TBL> Failed to start")
            sys.halt
        end if
        if tbl_schema_check(TBL_DESCRIPTOR_FILE)<>EN_TBL_STATUS_OK then
            sys.debugprint("TBL> Failed to check schema")
            sys.halt
        end if
    end if

modbus_slave_id=1

    mqtt_username=MQTTU
    mqtt_password=MQTTP
    mqtt_clientid=MQTTI
    MQTT_SERVER_HOST=MQTTH
    MQTT_DESTINATION_PORT="1883"

lcd_graph_start(0,4000)

    'Tibbit 05 RS485 setup on socket 1
    '================================================================
    io.num=PL_IO_NUM_0
    io.enabled = YES
    io.state = HIGH
    ser.num=SER_TBT05_S1_NAME
    ser.rtsmap=PL_IO_NUM_0
    ser.parity=PL_SER_PR_NONE
    ser.bits=PL_SER_BB_8
    ser.flowcontrol=PL_SER_FC_DISABLED
    'ser.baudrate=PL_SER_BAUD_38400'38400
    ser.baudrate=ser.div9600*9600/38400
    ser.dircontrol=PL_SER_DCP_LOWFORINPUT
    ser.interface=PL_SER_SI_HALFDUPLEX
    ser.dircontrol=PL_SER_DCP_LOWFORINPUT
    ser.esctype=PL_SER_ET_DISABLED
    ser.interchardelay=0
    ser.txbuffrq(1)
    ser.rxbuffrq(1)
    sys.buffalloc()
    
    ser.enabled=YES
    '-----------------------------------------------------------------

        
	timer_1s_lf276ggdlg9nar1w1cj_timer = 1 * 1000 / sys.onsystimerperiod / 10

    
    ' Set the timezone to UTC+08:00
    APP_TIMEZONE="27"
    datetime_tz_offset=APP_TIMEZONE
    APP_LATITUDE=0
    datetime_lat=APP_LATITUDE
    APP_LONGITUDE=0
    datetime_lng=APP_LONGITUDE

    pat.play("B-B-B-",PL_PAT_CANINT)

            var_var1_set(0.0)

            var_temp_raw_set(0)

            var_temp_set(0)

            var_ioline_set(0)

end sub