

include "global.tbh"

const STGCMD_CMD_ESC_CHAR = "@"

public function stgcmd_proc_cmd(byref cmd_str as string) as string
	stgcmd_proc_cmd=""
	dim x as byte
	dim setting_name as string(STG_MAX_SETTING_NAME_LEN)
	dim explicit_index as no_yes
	dim index as byte
	dim s2 as string(64)
	dim stg_data as string
	explicit_index=NO
	if left(cmd_str,1)<>"D" then
		x=instr(1,cmd_str,STGCMD_CMD_ESC_CHAR,1)
		if x>0 then
			'yes, the sequence is included -- extract it
			setting_name=mid(cmd_str,2,x-2)
			stg_data=mid(cmd_str,x+1,len(cmd_str)-x)
			explicit_index=YES
		end if
	end if
	

	dim cs,f,pos as byte
	dim mac_num as word
	dim i as word

	select case left(cmd_str,1)

	case "G": 'get setting --------------------------------------
        #IFDEF STG_MAX_SETTING_NAME_LEN
            setting_name=mid(cmd_str,2,STG_MAX_SETTING_NAME_LEN)
            select case stg_sg(setting_name,0,stgcmd_proc_cmd,EN_STG_GET)
            case EN_STG_STATUS_OK:
                goto reply_ok_have_data
            case EN_STG_STATUS_UNKNOWN:
                goto reply_err
            case EN_STG_STATUS_INVALID_INDEX:
                goto reply_err
            case else:
                goto reply_failed
            end select
        #ELSE
            goto reply_failed
        #ENDIF

	case "S": 'set setting --------------------------------------
		if explicit_index=NO then
			setting_name=mid(cmd_str,2,2)
			stg_data=right(cmd_str,len(cmd_str)-3)
		end if

        #IFDEF STG_MAX_SETTING_NAME_LEN
            select case stg_sg(setting_name,0,stg_data,EN_STG_SET)
            case EN_STG_STATUS_OK:
                goto reply_ok
            case EN_STG_STATUS_INVALID:
                goto reply_err
            case EN_STG_STATUS_INVALID_INDEX:
                goto reply_err
            case EN_STG_STATUS_UNKNOWN:
                goto reply_err
            case else:
                goto reply_failed
            end select
        #ELSE
            goto reply_failed
        #ENDIF

	case "B": 'buzz the device ---------------------------------- 
		callback_stgcmd_buzz_command()
		goto reply_ok

	case "I": 'initialize settings --------------------------
        #IFDEF STG_MAX_SETTING_NAME_LEN
            if stg_restore_multiple(EN_STG_INIT_MODE_OVERRIDE)<>EN_STG_STATUS_OK then goto reply_failed
            goto reply_ok
        #ELSE
            goto reply_failed
        #ENDIF
		goto reply_ok	
   
	case "E": 'reboot -------------------------------------------
		#IF WLN_AVAILABLE=1
        wln.disable()
        #ENDIF
		sys.reboot()
	
	
	case else
		goto reply_err
	
	end select

reply_rejected:
	stgcmd_proc_cmd="R"
	goto send

reply_err:
	stgcmd_proc_cmd="C"
	goto send

reply_failed:
	stgcmd_proc_cmd="F"
	goto send

reply_ok:
	stgcmd_proc_cmd="A"
	goto send

reply_ok_have_data:
	stgcmd_proc_cmd="A"+stgcmd_proc_cmd
	goto send

send:
	stgcmd_proc_cmd=chr(2)+stgcmd_proc_cmd+chr(13) 'add encapsulation
	
	
reply_null:
end function